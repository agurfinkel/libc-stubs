long a64l(const char *s)
_Noreturn void abort(void)
int accept4(int fd, struct sockaddr *restrict addr, socklen_t *restrict len, int flg)
int accept(int fd, struct sockaddr *restrict addr, socklen_t *restrict len)
int access(const char *filename, int amode)
int acct(const char *filename)
float acoshf(float x)
long double acoshl(long double x) acoshl 10 math/acoshl.c long double acoshl(long double x) acoshl 25 math/acoshl.c long double acoshl(long double x)
double acosh(double x)
long double acosl(long double x) acosl 32 math/acosl.c long double acosl(long double x)
int addmntent(FILE *f, const struct mntent *mnt)
static int addrcmp(const void *_a, const void *_b)
int adjtime(const struct timeval *in, struct timeval *out)
int adjtimex(struct timex *tx)
int aio_cancel(int fd, struct aiocb *cb)
int __aio_close(int fd)
int aio_error(const struct aiocb *cb)
int aio_fsync(int op, struct aiocb *cb)
static struct aio_queue *__aio_get_queue(int fd, int need)
int aio_read(struct aiocb *cb)
ssize_t aio_return(struct aiocb *cb)
int aio_suspend(const struct aiocb *const cbs[], int cnt, const struct timespec *ts)
static void __aio_unref_queue(struct aio_queue *q)
int aio_write(struct aiocb *cb)
unsigned alarm(unsigned seconds)
void *aligned_alloc(size_t align, size_t len)
static int alloc_rev(struct chunk *c)
int alphasort(const struct dirent **a, const struct dirent **b)
static int append(struct match **tail, const char *name, size_t len, int mark)
char *asctime(const struct tm *tm)
char *__asctime_r(const struct tm *restrict tm, char *restrict buf)
float asinhf(float x)
long double asinhl(long double x) asinhl 10 math/asinhl.c long double asinhl(long double x) asinhl 37 math/asinhl.c long double asinhl(long double x)
double asinh(double x)
long double asinl(long double x) asinl 34 math/asinl.c long double asinl(long double x)
int asprintf(char **s, const char *fmt, ...)
_Noreturn void __assert_fail(const char *expr, const char *file, int line, const char *func)
float atan2f(float y, float x)
long double atan2l(long double y, long double x) atan2l 28 math/atan2l.c long double atan2l(long double y, long double x)
double atan2(double y, double x)
float atanf(float x)
float atanhf(float x)
long double atanhl(long double x) atanhl 10 math/atanhl.c long double atanhl(long double x)
double atanh(double x)
long double atanl(long double x) atanl 129 math/atanl.c long double atanl(long double x)
double atan(double x)
int atexit(void (*func)(void))
double atof(const char *s)
int atoi(const char *s)
long long atoll(const char *s)
long atol(const char *s)
int at_quick_exit(void (*func)(void))
char *basename(char *s)
static void bcast_barrier(int s)
int bcmp(const void *s1, const void *s2, size_t n)
void bcopy(const void *s1, void *s2, size_t n)
static char *BF_crypt(const char *key, const char *setting,
static BF_word BF_encrypt(BF_ctx *ctx,
static void BF_set_key(const char *key, BF_key expanded, BF_key initial,
void __bin_chunk(struct chunk *self)
int bind(int fd, const struct sockaddr *addr, socklen_t len)
char *bind_textdomain_codeset(const char *domainname, const char *codeset)
char *bindtextdomain(const char *domainname, const char *dirname)
void __block_all_sigs(void *set)
void __block_app_sigs(void *set)
int brk(void *end)
void *bsearch(const void *key, const void *base, size_t nel, size_t width, int (*cmp)(const void *, const void *))
wint_t btowc(int c)
void bzero(void *s, size_t n)
size_t c16rtomb(char *restrict s, char16_t c16, mbstate_t *restrict ps)
size_t c32rtomb(char *restrict s, char32_t c32, mbstate_t *restrict ps)
long double cabsl(long double complex z) cabsl 9 complex/cabsl.c long double cabsl(long double complex z)
float complex cacosf(float complex z)
float complex cacoshf(float complex z)
long double complex cacoshl(long double complex z) cacoshl 9 complex/cacoshl.c long double complex cacoshl(long double complex z)
double complex cacosh(double complex z)
long double complex cacosl(long double complex z) cacosl 11 complex/cacosl.c long double complex cacosl(long double complex z)
double complex cacos(double complex z)
static void call(void *p)
void *calloc(size_t m, size_t n)
void call_once(once_flag *flag, void (*func)(void))
static void cancel_handler(int sig, siginfo_t *si, void *ctx)
long __cancel()
int capget(void *a, void *b)
int capset(void *a, void *b)
float cargf(float complex z)
long double cargl(long double complex z) cargl 9 complex/cargl.c long double cargl(long double complex z)
double carg(double complex z)
float complex casinf(float complex z)
float complex casinhf(float complex z)
long double complex casinhl(long double complex z) casinhl 9 complex/casinhl.c long double complex casinhl(long double complex z)
double complex casinh(double complex z)
long double complex casinl(long double complex z) casinl 10 complex/casinl.c long double complex casinl(long double complex z)
double complex casin(double complex z)
float complex catanf(float complex z)
float complex catanhf(float complex z)
long double complex catanhl(long double complex z) catanhl 9 complex/catanhl.c long double complex catanhl(long double complex z)
double complex catanh(double complex z)
long double complex catanl(long double complex z) catanl 92 complex/catanl.c long double complex catanl(long double complex z)
double complex catan(double complex z)
int catclose (nl_catd catd)
char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
nl_catd catopen (const char *name, int oflag)
float complex ccosf(float complex z)
float complex ccoshf(float complex z)
long double complex ccoshl(long double complex z)
double complex ccosh(double complex z)
long double complex ccosl(long double complex z) ccosl 9 complex/ccosl.c long double complex ccosl(long double complex z)
double complex ccos(double complex z)
float ceilf(float x) ceilf 3 math/ceilf.c float ceilf(float x) ceilf 5 math/powerpc64/ceilf.c float ceilf(float x) ceilf 5 math/s390x/ceilf.c float ceilf(float x)
long double ceill(long double x) ceill 12 math/ceill.c long double ceill(long double x) ceill 5 math/s390x/ceill.c long double ceill(long double x)
double ceil(double x) ceil 10 math/ceil.c double ceil(double x) ceil 5 math/powerpc64/ceil.c double ceil(double x) ceil 5 math/s390x/ceil.c double ceil(double x)
float complex cexpf(float complex z)
long double complex cexpl(long double complex z)
double complex cexp(double complex z)
speed_t cfgetispeed(const struct termios *tio)
speed_t cfgetospeed(const struct termios *tio)
void cfmakeraw(struct termios *t)
int cfsetispeed(struct termios *tio, speed_t speed)
int cfsetospeed(struct termios *tio, speed_t speed)
static int cgt_init(clockid_t clk, struct timespec *ts)
int chdir(const char *path)
static int checker(void *p)
static void check_pi()
static void check_robust()
static int child(void *args_vp)
int chmod(const char *path, mode_t mode)
int chown(const char *path, uid_t uid, gid_t gid)
int chroot(const char *path)




static void cleanup_fromsig(void *p)
static void cleanup(void *ctx) cleanup 17 network/res_msend.c static void cleanup(void *p) cleanup 56 passwd/getspnam_r.c static void cleanup(void *p) cleanup 4 thread/sem_timedwait.c static void cleanup(void *p)
int clearenv()
void clearerr(FILE *f)
int clock_adjtime (clockid_t clock_id, struct timex *utx)
int clock_getcpuclockid(pid_t pid, clockid_t *clk)
int clock_getres(clockid_t clk, struct timespec *ts)
int __clock_gettime(clockid_t clk, struct timespec *ts)
clock_t clock()
int clock_nanosleep(clockid_t clk, int flags, const struct timespec *req, struct timespec *rem)
int clock_settime(clockid_t clk, const struct timespec *ts)
float complex clogf(float complex z)
long double complex clogl(long double complex z) clogl 10 complex/clogl.c long double complex clogl(long double complex z)
double complex clog(double complex z)
int clone(int (*func)(void *), void *stack, int flags, void *arg, ...)
int closedir(DIR *dir)
static void close_file(FILE *f)
void closelog(void)
int close(int fd)
int cnd_broadcast(cnd_t *c)
void cnd_destroy(cnd_t *c)
int cnd_init(cnd_t *c)
int cnd_signal(cnd_t *c)
int cnd_timedwait(cnd_t *restrict c, mtx_t *restrict m, const struct timespec *restrict ts)
int cnd_wait(cnd_t *c, mtx_t *m)



static double common(uint32_t ix, double x, int y0) common 25 math/j0f.c static float common(uint32_t ix, float x, int y0) common 65 math/j1.c static double common(uint32_t ix, double x, int y1, int sign) common 25 math/j1f.c static float common(uint32_t ix, float x, int y1, int sign)
size_t confstr(int name, char *buf, size_t len)
long double complex conjl(long double complex z)
double complex conj(double complex z)
int connect(int fd, const struct sockaddr *addr, socklen_t len)
static int cookieclose(FILE *f)
static size_t cookieread(FILE *f, unsigned char *buf, size_t len)
static off_t cookieseek(FILE *f, off_t off, int whence)
static size_t cookiewrite(FILE *f, const unsigned char *buf, size_t len)
static void copy_addr(struct sockaddr **r, int af, union sockany *sa, void *addr, size_t addrlen, int ifindex)
void *__copy_tls(unsigned char *mem)
float cosf(float x)
float coshf(float x)
long double coshl(long double x) coshl 9 math/coshl.c long double coshl(long double x) coshl 43 math/coshl.c long double coshl(long double x)
double cosh(double x)
long double cosl(long double x) { cosl 8 math/cosl.c long double cosl(long double x)
double cos(double x)
float complex cpowf(float complex z, float complex c)
long double complex cpowl(long double complex z, long double complex c) cpowl 9 complex/cpowl.c long double complex cpowl(long double complex z, long double complex c)
double complex cpow(double complex z, double complex c)
long double complex cprojl(long double complex z) cprojl 9 complex/cprojl.c long double complex cprojl(long double complex z)
double complex cproj(double complex z)

int creat(const char *filename, mode_t mode)
char *__crypt_blowfish(const char *key, const char *setting, char *output)
char *__crypt_des(const char *key, const char *setting, char *output)
static char *_crypt_extended_r_uut(const char *_key, const char *_setting, char *output)
char *__crypt_md5(const char *key, const char *setting, char *output)
char *crypt(const char *key, const char *salt)
char *__crypt_r(const char *key, const char *salt, struct crypt_data *data)
char *__crypt_sha256(const char *key, const char *setting, char *output)
char *__crypt_sha512(const char *key, const char *setting, char *output)
float complex csinf(float complex z)
float complex csinhf(float complex z)
long double complex csinhl(long double complex z)
double complex csinh(double complex z)
long double complex csinl(long double complex z) csinl 9 complex/csinl.c long double complex csinl(long double complex z)
double complex csin(double complex z)
long double complex csqrtl(long double complex z)
double complex csqrt(double complex z)
float complex ctanf(float complex z)
float complex ctanhf(float complex z)
long double complex ctanhl(long double complex z)
double complex ctanh(double complex z)
long double complex ctanl(long double complex z) ctanl 9 complex/ctanl.c long double complex ctanl(long double complex z)
double complex ctan(double complex z)
char *ctermid(char *s)
char *ctime(const time_t *t)
char *ctime_r(const time_t *t, char *buf)
const unsigned short **__ctype_b_loc(void)
size_t __ctype_get_mb_cur_max()
const int32_t **__ctype_tolower_loc(void)
const int32_t **__ctype_toupper_loc(void)
char *cuserid(char *buf)
int __cxa_atexit(void (*func)(void *), void *arg, void *dso)
void __cxa_finalize(void *dso)
static void cycle(size_t width, unsigned char* ar[], int n)
int daemon(int nochdir, int noclose)
char *dcgettext(const char *domainname, const char *msgid, int category)
char *dcngettext(const char *domainname, const char *msgid1, const char *msgid2, unsigned long int n, int category)
static void default_locale_init(void)
int delete_module(const char *a, unsigned b)
void __des_setkey(const unsigned char *key, struct expanded_key *ekey)
char *dgettext(const char *domainname, const char *msgid)
int dirfd(DIR *d) dirfd 19 misc/nftw.c #undef dirfd dirfd 20 misc/nftw.c #define dirfd(d) (*(int *)d)
char *dirname(char *s)
int dlclose(void *p)
char *dlerror()
int dlinfo(void *dso, int req, void *res)
hidden void __dl_seterr(const char *fmt, ...)
void *dlsym(void *restrict p, const char *restrict s)
void __dl_thread_cleanup(void)
hidden void __dl_vseterr(const char *fmt, va_list ap)
int dn_comp(const char *src, unsigned char *dst, int space, unsigned char **dnptrs, unsigned char **lastdnptr)
int __dn_expand(const unsigned char *base, const unsigned char *end, const unsigned char *src, char *dest, int space)
char *dngettext(const char *domainname, const char *msgid1, const char *msgid2, unsigned long int n)
int dn_skipname(const unsigned char *s, const unsigned char *end)

static int dns_parse_callback(void *c, int rr, const void *data, int len, const void *packet) dns_parse_callback 106 network/lookup_name.c static int dns_parse_callback(void *c, int rr, const void *data, int len, const void *packet)
int __dns_parse(const unsigned char *r, int rlen, int (*callback)(void *, int, const void *, int, const void *), void *ctx)
void __do_cleanup_pop(struct __ptcb *cb)
void __do_cleanup_push(struct __ptcb *cb)
void __do_des(uint32_t l_in, uint32_t r_in,
static int do_getaffinity(pid_t tid, size_t size, cpu_set_t *set)
static int do_glob(char *buf, size_t pos, int type, char *pat, int flags, int (*errfunc)(const char *path, int err), struct match **tail)
static int do_nftw(char *path, int (*fn)(const char *, const struct stat *, int, struct FTW *), int fd_limit, int flags, struct history *h)
void __do_orphaned_stdio_locks()


static size_t do_read(FILE *f, unsigned char *buf, size_t len) do_read 11 stdlib/wcstod.c static size_t do_read(FILE *f, unsigned char *buf, size_t len) do_read 13 stdlib/wcstol.c static size_t do_read(FILE *f, unsigned char *buf, size_t len)
static void do_setrlimit(void *p)
static void do_setxid(void *p)
static void do_tzset()
int dprintf(int fd, const char *restrict fmt, ...)
double drand48(void)
static void dummy(void) {} dummy 5 env/clearenv.c static void dummy(char *old, char *new) {} dummy 5 env/putenv.c static void dummy(char *old, char *new) {} dummy 6 env/unsetenv.c static void dummy(char *old, char *new) {} dummy 5 exit/exit.c static void dummy() dummy 4 exit/quick_exit.c static void dummy() { } dummy 4 locale/__lctrans.c static const char *dummy(const char *msg, const struct __locale_map *lm) dummy 8 mman/mmap.c static void dummy(void) { } dummy 9 mman/mremap.c static void dummy(void) { } dummy 4 mman/munmap.c static void dummy(void) { } dummy 8 process/fork.c static void dummy(int x) dummy 3 stdio/__stdio_close.c static int dummy(int fd) dummy 4 stdio/fclose.c static void dummy(FILE *f) { } dummy 3 thread/pthread_cleanup_push.c static void dummy(struct __ptcb *cb) dummy 3 thread/pthread_testcancel.c static void dummy() dummy 16 thread/synccall.c static void dummy(void *p) dummy 5 unistd/close.c static int dummy(int fd)
locale_t __duplocale(locale_t old)
char *ecvt(double x, int n, int *dp, int *sign)
void encrypt(char *block, int edflag)
int endmntent(FILE *f)
void endprotoent(void)
void endusershell(void)
void __env_rm_add(char *old, char *new)
int epoll_ctl(int fd, int op, int fd2, struct epoll_event *ev)
int epoll_pwait(int fd, struct epoll_event *ev, int cnt, int to, const sigset_t *sigs)
int epoll_wait(int fd, struct epoll_event *ev, int cnt, int to)
double erand48(unsigned short s[3])


static double erfc2(uint32_t ix, double x) erfc2 97 math/erff.c static float erfc2(uint32_t ix, float x) erfc2 254 math/erfl.c static long double erfc2(uint32_t ix, long double x)
float erfcf(float x)
long double erfcl(long double x) erfcl 315 math/erfl.c long double erfcl(long double x) erfcl 349 math/erfl.c long double erfcl(long double x)
double erfc(double x)
float erff(float x)
long double erfl(long double x) erfl 286 math/erfl.c long double erfl(long double x) erfl 345 math/erfl.c long double erfl(long double x)
double erf(double x)
_Noreturn void err(int status, const char *fmt, ...)
int *__errno_location(void)
_Noreturn void errx(int status, const char *fmt, ...)
struct ether_addr *ether_aton (const char *x)
struct ether_addr *ether_aton_r (const char *x, struct ether_addr *p_a)
int ether_hostton(const char *hostname, struct ether_addr *e)
int ether_line(const char *l, struct ether_addr *e, char *hostname)
char *ether_ntoa (const struct ether_addr *p_a) {
char *ether_ntoa_r (const struct ether_addr *p_a, char *x) {
int ether_ntohost(char *hostname, const struct ether_addr *e)
int euidaccess(const char *filename, int amode)
static const char *evalbinop(struct st *st, const char *s, int minprec, int d)
static const char *evalexpr(struct st *st, const char *s, int d)
static const char *evalprim(struct st *st, const char *s, int d)
int eventfd_read(int fd, eventfd_t *value)
int eventfd_write(int fd, eventfd_t value)
int execle(const char *path, const char *argv0, ...)
int execl(const char *path, const char *argv0, ...)
int execlp(const char *file, const char *argv0, ...)
int execve(const char *path, char *const argv[], char *const envp[])
int execv(const char *path, char *const argv[])
int __execvpe(const char *file, char *const argv[], char *const envp[])
int execvp(const char *file, char *const argv[])
_Noreturn void exit(int code)
float exp10f(float x)
long double exp10l(long double x) exp10l 12 math/exp10l.c long double exp10l(long double x)
double exp10(double x)
float exp2f(float x)
long double exp2l(long double x) exp2l 200 math/exp2l.c long double exp2l(long double x) exp2l 566 math/exp2l.c exp2l(long double x)
double exp2(double x)
void *__expand_heap(size_t *pn)
float expf(float x)
void explicit_bzero(void *d, size_t n)
long double expl(long double x) expl 93 math/expl.c long double expl(long double x) expl 124 math/expl.c long double expl(long double x)
float expm1f(float x)
double expm1(double x)
double exp(double x)
float __expo2f(float x)
double __expo2(double x)
int faccessat(int fd, const char *filename, int amode, int flag)
int fanotify_mark(int fanotify_fd, unsigned flags, unsigned long long mask,
size_t __fbufsize(FILE *f)
int fchdir(int fd)
int fchmodat(int fd, const char *path, mode_t mode, int flag)
int fchmod(int fd, mode_t mode)
int fchownat(int fd, const char *path, uid_t uid, gid_t gid, int flag)
int fchown(int fd, uid_t uid, gid_t gid)
int __fclose_ca(FILE *f)
int fclose(FILE *f)
int fcntl(int fd, int cmd, ...)
char *fcvt(double x, int n, int *dp, int *sign)
DIR *fdopendir(int fd)
FILE *__fdopen(int fd, const char *mode)
int fegetenv(fenv_t *envp) fegetenv 60 fenv/m68k/fenv.c int fegetenv(fenv_t *envp) fegetenv 59 fenv/powerpc64/fenv.c int fegetenv(fenv_t *envp) fegetenv 46 fenv/s390x/fenv.c int fegetenv(fenv_t *envp)
int fegetexceptflag(fexcept_t *fp, int mask)
int feholdexcept(fenv_t *envp)
#define feof(f) ((f)->flags & F_EOF) feof 3 stdio/feof.c #undef feof feof 5 stdio/feof.c int feof(FILE *f)
#define ferror(f) ((f)->flags & F_ERR) ferror 3 stdio/ferror.c #undef ferror ferror 5 stdio/ferror.c int ferror(FILE *f)
int fesetenv(const fenv_t *envp) fesetenv 69 fenv/m68k/fenv.c int fesetenv(const fenv_t *envp) fesetenv 65 fenv/powerpc64/fenv.c int fesetenv(const fenv_t *envp) fesetenv 52 fenv/s390x/fenv.c int fesetenv(const fenv_t *envp)
int fesetexceptflag(const fexcept_t *fp, int mask)
int feupdateenv(const fenv_t *envp)
int fexecve(int fd, char *const argv[], char *const envp[])
int fflush(FILE *f)
int fgetc(FILE *f)
struct group *fgetgrent(FILE *f)
char *fgetln(FILE *f, size_t *plen)
int fgetpos(FILE *restrict f, fpos_t *restrict pos)
struct passwd *fgetpwent(FILE *f)
char *fgets(char *restrict s, int n, FILE *restrict f)
struct spwd *fgetspent(FILE *f)
wint_t fgetwc(FILE *f)
wint_t __fgetwc_unlocked(FILE *f)
wchar_t *fgetws(wchar_t *restrict s, int n, FILE *restrict f)
ssize_t fgetxattr(int filedes, const char *name, void *value, size_t size)
int fileno(FILE *f)
static size_t find_charmap(const void *name)
int __flbf(FILE *f)
ssize_t flistxattr(int filedes, char *list, size_t size)
long double __floatscan(FILE *f, int prec, int pok)
void flockfile(FILE *f)
float floorf(float x) floorf 3 math/floorf.c float floorf(float x) floorf 5 math/powerpc64/floorf.c float floorf(float x) floorf 5 math/s390x/floorf.c float floorf(float x)
long double floorl(long double x) floorl 12 math/floorl.c long double floorl(long double x) floorl 5 math/s390x/floorl.c long double floorl(long double x)
double floor(double x) floor 10 math/floor.c double floor(double x) floor 5 math/powerpc64/floor.c double floor(double x) floor 5 math/s390x/floor.c double floor(double x)
int __flt_rounds()
void _flushlbf(void)
float fmaf(float x, float y, float z) fmaf 5 math/arm/fmaf.c float fmaf(float x, float y, float z) fmaf 39 math/fmaf.c float fmaf(float x, float y, float z) fmaf 9 math/powerpc/fmaf.c float fmaf(float x, float y, float z) fmaf 3 math/powerpc64/fmaf.c float fmaf(float x, float y, float z) fmaf 5 math/riscv64/fmaf.c float fmaf(float x, float y, float z) fmaf 3 math/s390x/fmaf.c float fmaf(float x, float y, float z) fmaf 5 math/x32/fmaf.c float fmaf(float x, float y, float z) fmaf 13 math/x32/fmaf.c float fmaf(float x, float y, float z) fmaf 5 math/x86_64/fmaf.c float fmaf(float x, float y, float z) fmaf 13 math/x86_64/fmaf.c float fmaf(float x, float y, float z)
long double fmal(long double x, long double y, long double z) fmal 165 math/fmal.c long double fmal(long double x, long double y, long double z)
double fma(double x, double y, double z) fma 5 math/arm/fma.c double fma(double x, double y, double z) fma 42 math/fma.c double fma(double x, double y, double z) fma 9 math/powerpc/fma.c double fma(double x, double y, double z) fma 3 math/powerpc64/fma.c double fma(double x, double y, double z) fma 5 math/riscv64/fma.c double fma(double x, double y, double z) fma 3 math/s390x/fma.c double fma(double x, double y, double z) fma 5 math/x32/fma.c double fma(double x, double y, double z) fma 13 math/x32/fma.c double fma(double x, double y, double z) fma 5 math/x86_64/fma.c double fma(double x, double y, double z) fma 13 math/x86_64/fma.c double fma(double x, double y, double z)
FILE *fmemopen(void *restrict buf, size_t size, const char *restrict mode)
int __fmodeflags(const char *mode)
int fmtmsg(long classification, const char *label, int severity,
static int fnmatch_internal(const char *pat, size_t m, const char *str, size_t n, int flags)
int fnmatch(const char *pat, const char *str, int flags)
FILE *fopencookie(void *cookie, const char *mode, cookie_io_functions_t iofuncs)
FILE *fopen(const char *restrict filename, const char *restrict mode)
FILE *__fopen_rb_ca(const char *filename, FILE *f, unsigned char *buf, size_t len)
void __fork_handler(int who)
pid_t fork(void)
int forkpty(int *pm, char *name, const struct termios *tio, const struct winsize *ws)
long fpathconf(int fd, int name)
size_t __fpending(FILE *f)
int fprintf(FILE *restrict f, const char *restrict fmt, ...)
int __fpurge(FILE *f)
int fputc(int c, FILE *f)
int fputs(const char *restrict s, FILE *restrict f)
wint_t fputwc(wchar_t c, FILE *f)
wint_t __fputwc_unlocked(wchar_t c, FILE *f)
int fputws(const wchar_t *restrict ws, FILE *restrict f)
int __freadable(FILE *f)
size_t __freadahead(FILE *f)
int __freading(FILE *f)
size_t fread(void *restrict destv, size_t size, size_t nmemb, FILE *restrict f)
void __freadptrinc(FILE *f, size_t inc)
const char *__freadptr(FILE *f, size_t *sizep)
void freeaddrinfo(struct addrinfo *p)
void freeifaddrs(struct ifaddrs *ifp)
void freelocale(locale_t l)
void free(void *p)
int fremovexattr(int fd, const char *name)
FILE *freopen(const char *restrict filename, const char *restrict mode, FILE *restrict f)
float frexpf(float x, int *e)
long double frexpl(long double x, int *e) frexpl 9 math/frexpl.c long double frexpl(long double x, int *e)
double frexp(double x, int *e)
int fscanf(FILE *restrict f, const char *restrict fmt, ...)
int fseek(FILE *f, long off, int whence)
int __fseeko(FILE *f, off_t off, int whence)
int __fseeko_unlocked(FILE *f, off_t off, int whence)
void __fseterr(FILE *f)
int __fsetlocking(FILE *f, int type)
int fsetpos(FILE *f, const fpos_t *pos)
int fsetxattr(int filedes, const char *name, const void *value, size_t size, int flags)
int fstatat(int fd, const char *restrict path, struct stat *restrict buf, int flag)
static int __fstatfs(int fd, struct statfs *buf)
int fstat(int fd, struct stat *st)
int fstatvfs(int fd, struct statvfs *buf)
long ftell(FILE *f)
off_t __ftello(FILE *f)
off_t __ftello_unlocked(FILE *f)
int ftime(struct timeb *tp)
key_t ftok(const char *path, int id)
int ftrylockfile(FILE *f)
int ftw(const char *path, int (*fn)(const char *, const struct stat *, int), int fd_limit)
void __funcs_on_exit()
void __funcs_on_quick_exit()
void funlockfile(FILE *f)
int futimens(int fd, const struct timespec times[2])
int __futimesat(int dirfd, const char *pathname, const struct timeval times[2])
int futimes(int fd, const struct timeval tv[2])
int fwide(FILE *f, int mode)
int fwprintf(FILE *restrict f, const wchar_t *restrict fmt, ...)
int __fwritable(FILE *f)
size_t fwrite(const void *restrict src, size_t size, size_t nmemb, FILE *restrict f)
size_t __fwritex(const unsigned char *restrict s, size_t l, FILE *restrict f)
int __fwriting(FILE *f)
int fwscanf(FILE *restrict f, const wchar_t *restrict fmt, ...)
int __fxstatat(int ver, int fd, const char *path, struct stat *buf, int flag)
int __fxstat(int ver, int fd, struct stat *buf)
const char *gai_strerror(int ecode)
char *gcvt(double x, int n, char *b)
int getaddrinfo(const char *restrict host, const char *restrict serv, const struct addrinfo *restrict hint, struct addrinfo **restrict res)
unsigned long __getauxval(unsigned long item)
long get_avphys_pages()
int getchar(void)
int getchar_unlocked(void)
int getc(FILE *f)
static long getcpu_init(unsigned *cpu, unsigned *node, void *unused)
#define getc_unlocked(f) \
char *get_current_dir_name(void) {
char *getcwd(char *buf, size_t size)
struct tm *getdate(const char *s)
ssize_t getdelim(char **restrict s, size_t *restrict n, int delim, FILE *restrict f)
int getdents(int fd, struct dirent *buf, size_t len)
int getdomainname(char *name, size_t len)
int getdtablesize(void)
int getentropy(void *buffer, size_t len)
char *getenv(const char *name)
int __getgr_a(const char *name, gid_t gid, struct group *gr, char **buf, size_t *size, char ***mem, size_t *nmem, struct group **res)
int __getgrent_a(FILE *f, struct group *gr, char **line, size_t *size, char ***mem, size_t *nmem, struct group **res)
struct group *getgrent()
struct group *getgrgid(gid_t gid)
int getgrgid_r(gid_t gid, struct group *gr, char *buf, size_t size, struct group **res)
struct group *getgrnam(const char *name)
int getgrnam_r(const char *name, struct group *gr, char *buf, size_t size, struct group **res)
int getgrouplist(const char *user, gid_t gid, gid_t *groups, int *ngroups)
int getgroups(int count, gid_t list[])
static int getgr_r(const char *name, gid_t gid, struct group *gr, char *buf, size_t size, struct group **res)
void __get_handler_set(sigset_t *set)
struct hostent *gethostbyaddr(const void *a, socklen_t l, int af)
int gethostbyaddr_r(const void *a, socklen_t l, int af,
struct hostent *gethostbyname2(const char *name, int af)
int gethostbyname2_r(const char *name, int af,
struct hostent *gethostbyname(const char *name)
int gethostbyname_r(const char *name,
int gethostname(char *name, size_t len)
int getifaddrs(struct ifaddrs **ifap)
int getitimer(int which, struct itimerval *old)
ssize_t getline(char **restrict s, size_t *restrict n, FILE *restrict f)
int getloadavg(double *a, int n)
const struct __locale_map *__get_locale(int cat, const char *val)
char *getlogin(void)
int getlogin_r(char *name, size_t size)
struct mntent *getmntent(FILE *f)
struct mntent *getmntent_r(FILE *f, struct mntent *mnt, char *linebuf, int buflen)
int getnameinfo(const struct sockaddr *restrict sa, socklen_t sl,
static void getname(char *d, const char **p)
struct netent *getnetbyname(const char *name)
int get_nprocs_conf()
int get_nprocs()
static int getoff(const char **p)
static int __getopt_long(int argc, char *const *argv, const char *optstring, const struct option *longopts, int *idx, int longonly)
int getopt_long(int argc, char *const *argv, const char *optstring, const struct option *longopts, int *idx)
int getopt_long_only(int argc, char *const *argv, const char *optstring, const struct option *longopts, int *idx)
int getopt(int argc, char aio complex conf crypt ctype data_struct.txt dirent env errno exit fcntl fenv format_sigs.sh get_signatures.sh GPATH GRTAGS GTAGS include internal ipc ldso legacy linux locale malloc math misc mman mq multibyte musllvm_funcs.txt network output passwd prng process regex sched search select setjmp shit.txt signal signatures.txt stat stdio stdlib string temp termios thread time unistd const argv[], const char *optstring)
void __getopt_msg(const char *a, const char *b, const char *c, size_t l)
char *getpass(const char *prompt)
int getpeername(int fd, struct sockaddr *restrict addr, socklen_t *restrict len)
long get_phys_pages()
struct protoent *getprotobyname(const char *name)
struct protoent *getprotobynumber(int num)
struct protoent *getprotoent(void)
int __getpw_a(const char *name, uid_t uid, struct passwd *pw, char **buf, size_t *size, struct passwd **res)
int __getpwent_a(FILE *f, struct passwd *pw, char **line, size_t *size, struct passwd **res)
struct passwd *getpwent()
struct passwd *getpwnam(const char *name)
int getpwnam_r(const char *name, struct passwd *pw, char *buf, size_t size, struct passwd **res)
static int getpw_r(const char *name, uid_t uid, struct passwd *pw, char *buf, size_t size, struct passwd **res)
struct passwd *getpwuid(uid_t uid)
int getpwuid_r(uid_t uid, struct passwd *pw, char *buf, size_t size, struct passwd **res)
ssize_t getrandom(void *buf, size_t buflen, unsigned flags)
int getresgid(gid_t *rgid, gid_t *egid, gid_t *sgid)
int __get_resolv_conf(struct resolvconf *conf, char *search, size_t search_sz)
int getresuid(uid_t *ruid, uid_t *euid, uid_t *suid)
int getrlimit(int resource, struct rlimit *rlim)
static void getrule(const char **p, int rule[5])
int getrusage(int who, struct rusage *ru)
struct servent *getservbyname(const char *name, const char *prots)
int getservbyname_r(const char *name, const char *prots,
struct servent *getservbyport(int port, const char *prots)
int getservbyport_r(int port, const char *prots,
char *gets(char *s)
int getsockname(int fd, struct sockaddr *restrict addr, socklen_t *restrict len)
int getsockopt(int fd, int level, int optname, void *restrict optval, socklen_t *restrict optlen)
struct spwd *getspnam(const char *name)
int getspnam_r(const char *name, struct spwd *sp, char *buf, size_t size, struct spwd **res)
int getsubopt(char **opt, char *const *keys, char **val)
char *__gettextdomain()
char *gettext(const char *msgid)
int gettimeofday(struct timeval *restrict tv, void *restrict tz)
char *getusershell(void)
struct utmpx *getutxid(const struct utmpx *ut)
struct utmpx *getutxline(const struct utmpx *ut)
wint_t getwchar(void)
wint_t getwc(FILE *f) getwc 77 stdio/vfwscanf.c #undef getwc getwc 78 stdio/vfwscanf.c #define getwc(f) \
int getw(FILE *f)
ssize_t getxattr(const char *path, const char *name, void *value, size_t size)
void globfree(glob_t *g)
int glob(const char *restrict pat, int flags, int (*errfunc)(const char *path, int err), glob_t *restrict g)
struct tm *gmtime(const time_t *t)
struct tm *__gmtime_r(const time_t *restrict t, struct tm *restrict tm)
static void handler(int sig)

static void hashmd(struct sha256 *s, unsigned int n, const void *md) hashmd 199 crypt/crypt_sha512.c static void hashmd(struct sha512 *s, unsigned int n, const void *md)
char *hasmntopt(const struct mntent *mnt, const char *opt)
int hcreate(size_t nel)
static int __hcreate_r(size_t nel, struct hsearch_data *htab)
void hdestroy(void)
static void __hdestroy_r(struct hsearch_data *htab)
int *__h_errno_location(void)
void herror(const char *msg)
ENTRY *hsearch(ENTRY item, ACTION action)
static int __hsearch_r(ENTRY item, ACTION action, ENTRY **retval, struct hsearch_data *htab)
const char *hstrerror(int ecode)
int iconv_close(iconv_t cd)
size_t iconv(iconv_t cd, char **restrict in, size_t *restrict inb, char **restrict out, size_t *restrict outb)
iconv_t iconv_open(const char *to, const char *from)
void if_freenameindex(struct if_nameindex *idx)
char *if_indextoname(unsigned index, char *name)
struct if_nameindex *if_nameindex()
unsigned if_nametoindex(const char *name)
static int ignore_err(const char *path, int err)
int ilogbf(float x)
int ilogbl(long double x) ilogbl 10 math/ilogbl.c int ilogbl(long double x) ilogbl 33 math/ilogbl.c int ilogbl(long double x)
int ilogb(double x)
imaxdiv_t imaxdiv(intmax_t num, intmax_t den)
char *index(const char *s, int c)
in_addr_t inet_addr(const char *p)
int __inet_aton(const char *s0, struct in_addr *dest)
in_addr_t inet_network(const char *p)
char *inet_ntoa(struct in_addr in)
const char *inet_ntop(int af, const void *restrict a0, char *restrict s, socklen_t l)
int inet_pton(int af, const char *restrict s, void *restrict a0)
void __inhibit_ptc()
int initgroups(const char *user, gid_t gid)
void __init_libc(char **envp, char *pn)
int init_module(void *a, unsigned long b, const char *c)
void __init_ssp(void *entropy)
static void init_stack_size()
char *initstate(unsigned seed, char *state, size_t size) {
int __init_tp(void *p)
int inotify_add_watch(int fd, const char *pathname, uint32_t mask)
void insque(void *element, void *pred)
static void install_handler()
unsigned long long __intscan(FILE *f, unsigned base, int pok, unsigned long long lim)
int ioctl(int fd, int req, ...)
static void *io_thread_func(void *ctx)
int __isalnum_l(int c, locale_t l)
int __isalpha_l(int c, locale_t l)
int isatty(int fd)
int __isblank_l(int c, locale_t l)
int __iscntrl_l(int c, locale_t l)
int __isdigit_l(int c, locale_t l)
int __isgraph_l(int c, locale_t l)
int __islower_l(int c, locale_t l)
int __isprint_l(int c, locale_t l)
int __ispunct_l(int c, locale_t l)
int issetugid(void)
int __isspace_l(int c, locale_t l)
int __isupper_l(int c, locale_t l)
static int is_valid_hostname(const char *host)
int __iswalnum_l(wint_t c, locale_t l)
int iswalnum(wint_t wc)
int __iswalpha_l(wint_t c, locale_t l)
int iswalpha(wint_t wc)
int __iswblank_l(wint_t c, locale_t l)
int __iswcntrl_l(wint_t c, locale_t l)
int __iswctype_l(wint_t c, wctype_t t, locale_t l)
int iswctype(wint_t wc, wctype_t type)
int __iswdigit_l(wint_t c, locale_t l)
int __iswgraph_l(wint_t c, locale_t l)
int iswgraph(wint_t wc)
int __iswlower_l(wint_t c, locale_t l)
int iswlower(wint_t wc)
int __iswprint_l(wint_t c, locale_t l)
int __iswpunct_l(wint_t c, locale_t l)
int iswpunct(wint_t wc)
int __iswspace_l(wint_t c, locale_t l)
int iswspace(wint_t wc)
int __iswupper_l(wint_t c, locale_t l)
int iswupper(wint_t wc)
int __iswxdigit_l(wint_t c, locale_t l)
int __isxdigit_l(int c, locale_t l)
float j0f(float x)
double j0(double x)
float j1f(float x)
double j1(double x)
float jnf(int n, float x)
double jn(int n, double x)
long jrand48(unsigned short s[3])
int killpg(pid_t pgid, int sig)
int klogctl (int type, char *buf, int len)
char *l64a(long x0)
int lchmod(const char *path, mode_t mode)
int lchown(const char *path, uid_t uid, gid_t gid)
void lcong48(unsigned short p[7])
const char *__lctrans_cur(const char *msg)
const char *__lctrans_impl(const char *msg, const struct __locale_map *lm)
const char *__lctrans(const char *msg, const struct __locale_map *lm)
float complex __ldexp_cexpf(float complex z, int expt)
double complex __ldexp_cexp(double complex z, int expt)
ldiv_t ldiv(long num, long den)
static unsigned legacy_map(const unsigned char *map, unsigned c)
void *lfind(const void *key, const void *base, size_t *nelp,
float lgammaf(float x)
float __lgammaf_r(float x, int *signgamp)
long double lgammal(long double x)
long double __lgammal_r(long double x, int *sg) __lgammal_r 223 math/lgammal.c long double __lgammal_r(long double x, int *sg) { __lgammal_r 342 math/lgammal.c long double __lgammal_r(long double x, int *sg)
double lgamma(double x)
double __lgamma_r(double x, int *signgamp) __lgamma_r 174 math/tgamma.c double __lgamma_r(double x, int *sign)
ssize_t lgetxattr(const char *path, const char *name, void *value, size_t size)
static void libc_exit_fini(void)
int __libc_sigaction(int sig, const struct sigaction *restrict sa, struct sigaction *restrict old)
static void libc_start_init(void)
int __libc_start_main(int (*main)(int,char **,char **), int argc, char **argv)
static int libc_start_main_stage2(int (*main)(int,char **,char **), int argc, char **argv)
int linkat(int fd1, const char *existing, int fd2, const char *new, int flag)
int link(const char *existing, const char *new)
int lio_listio(int mode, struct aiocb *restrict const *restrict cbs, int cnt, struct sigevent *restrict sev)
static int lio_wait(struct lio_state *st)
ssize_t listxattr(const char *path, char *list, size_t size)
lldiv_t lldiv(long long num, long long den)
ssize_t llistxattr(const char *path, char *list, size_t size)
struct lconv *localeconv(void)
struct tm *localtime(const time_t *t)
struct tm *__localtime_r(const time_t *restrict t, struct tm *restrict tm)
int __loc_is_allocated(locale_t loc)
static inline void lock_bin(int i)
int __lockfile(FILE *f)
int lockf(int fd, int op, off_t size)


static int locking_getc(FILE *f)


static int locking_putc(int c, FILE *f)
void __lock(volatile int *l)
long double log10l(long double x) log10l 118 math/log10l.c long double log10l(long double x) log10l 187 math/log10l.c long double log10l(long double x)
float log1pf(float x)
long double log1pl(long double x) log1pl 104 math/log1pl.c long double log1pl(long double xm1) log1pl 173 math/log1pl.c long double log1pl(long double x)
double log1p(double x)
float log2f(float x)
long double log2l(long double x) log2l 109 math/log2l.c long double log2l(long double x) log2l 178 math/log2l.c long double log2l(long double x)
double log2(double x)
float logf(float x)
int login_tty(int fd)
long double logl(long double x) logl 108 math/logl.c long double logl(long double x) logl 171 math/logl.c long double logl(long double x)
double log(double x)
int __lookup_ipliteral(struct address buf[static 1], const char *name, int family)
static ENTRY *lookup(char *key, size_t hash, struct hsearch_data *htab)
int __lookup_name(struct address buf[static MAXADDRS], char canon[static 256], const char *name, int family, int flags)
int __lookup_serv(struct service buf[static MAXSERVS], const char *name, int proto, int socktype, int flags)
long lrand48(void)
int lremovexattr(const char *path, const char *name)
void *lsearch(const void *key, void *base, size_t *nelp, size_t width,
int lsetxattr(const char *path, const char *name, const void *value, size_t size, int flags)
int lstat(const char *restrict path, struct stat *restrict buf)
int __lsysinfo(struct sysinfo *info) __lsysinfo 23 linux/x32/sysinfo.c int __lsysinfo(struct sysinfo *info)
int lutimes(const char *filename, const struct timeval tv[2])
int __lxstat(int ver, const char *path, struct stat *buf)
int __madvise(void *addr, size_t len, int advice)
void __malloc_donate(char *start, char *end)
void *malloc(size_t n)
size_t malloc_usable_size(void *p)
const char unsigned *__map_file(const char *pathname, size_t *size)
static int match_bracket(const char *p, int k, int kfold)
float __math_divzerof(uint32_t sign)
double __math_divzero(uint32_t sign)
float __math_xflowf(uint32_t sign, float y)
double __math_xflow(uint32_t sign, double y)
int mblen(const char *s, size_t n)
size_t mbrlen(const char *restrict s, size_t n, mbstate_t *restrict st)
size_t mbrtoc16(char16_t *restrict pc16, const char *restrict s, size_t n, mbstate_t *restrict ps)
size_t mbrtoc32(char32_t *restrict pc32, const char *restrict s, size_t n, mbstate_t *restrict ps)
size_t mbrtowc(wchar_t *restrict wc, const char *restrict src, size_t n, mbstate_t *restrict st)
int mbsinit(const mbstate_t *st)
size_t mbsnrtowcs(wchar_t *restrict wcs, const char **restrict src, size_t n, size_t wn, mbstate_t *restrict st)
size_t mbsrtowcs(wchar_t *restrict ws, const char **restrict src, size_t wn, mbstate_t *restrict st)
size_t mbstowcs(wchar_t *restrict ws, const char *restrict s, size_t wn)
int mbtowc(wchar_t *restrict wc, const char *restrict src, size_t n)
static int mclose(FILE *m)
static char *md5crypt(const char *key, const char *setting, char *output)
static void md5_sum(struct md5 *s, uint8_t *md)
static void md5_update(struct md5 *s, const void *m, unsigned long len)
void *__memalign(size_t align, size_t len)
int __membarrier(int cmd, int flags)
void *memccpy(void *restrict dest, const void *restrict src, int c, size_t n)
void *memchr(const void *src, int c, size_t n)
int memcmp(const void *vl, const void *vr, size_t n)
void *memcpy(void *restrict dest, const void *restrict src, size_t n)
int memfd_create(const char *name, unsigned flags)
void *memmem(const void *h0, size_t k, const void *n0, size_t l)
void *memmove(void *dest, const void *src, size_t n)
void *mempcpy(void *dest, const void *src, size_t n)
void *__memrchr(const void *m, int c, size_t n)
void *memset(void *dest, int c, size_t n)
int mincore (void *addr, size_t len, unsigned char *vec)
int mkdirat(int fd, const char *path, mode_t mode)
int mkdir(const char *path, mode_t mode)
char *mkdtemp(char *template)
int mkfifoat(int fd, const char *path, mode_t mode)
int mkfifo(const char *path, mode_t mode)
int mknodat(int fd, const char *path, mode_t mode, dev_t dev)
int mknod(const char *path, mode_t mode, dev_t dev)
int mkostemp(char *template, int flags)
int __mkostemps(char *template, int len, int flags)
int mkstemp(char *template)
int mkstemps(char *template, int len)
char *mktemp(char *template)
time_t mktime(struct tm *tm)
int mlock2(const void *addr, size_t len, unsigned flags)
int mlock(const void *addr, size_t len)
void *__mmap(void *start, size_t len, int prot, int flags, int fd, off_t off)
float modff(float x, float *iptr)
long double modfl(long double x, long double *iptr) modfl 17 math/modfl.c long double modfl(long double x, long double *iptr)
double modf(double x, double *iptr)
const char *__mo_lookup(const void *p, size_t size, const char *s)
int __month_to_secs(int month, int is_leap)
int mount(const char *special, const char *dir, const char *fstype, unsigned long flags, const void *data)
int __mprotect(void *addr, size_t len, int prot)
int mq_getattr(mqd_t mqd, struct mq_attr *attr)
int mq_notify(mqd_t mqd, const struct sigevent *sev)
mqd_t mq_open(const char *name, int flags, ...)
ssize_t mq_receive(mqd_t mqd, char *msg, size_t len, unsigned *prio)
int mq_send(mqd_t mqd, const char *msg, size_t len, unsigned prio)
int mq_setattr(mqd_t mqd, const struct mq_attr *restrict new, struct mq_attr *restrict old)
ssize_t mq_timedreceive(mqd_t mqd, char *restrict msg, size_t len, unsigned *restrict prio, const struct timespec *restrict at)
int mq_timedsend(mqd_t mqd, const char *msg, size_t len, unsigned prio, const struct timespec *at)
int mq_unlink(const char *name)
long mrand48(void)
static size_t mread(FILE *f, unsigned char *buf, size_t len)
void *__mremap(void *old_addr, size_t old_len, size_t new_len, int flags, ...)
static int ms_close(FILE *f)
static off_t mseek(FILE *f, off_t off, int whence)
int msgctl(int q, int cmd, struct msqid_ds *buf)
ssize_t msgrcv(int q, void *m, size_t len, long type, int flag)
int msgsnd(int q, const void *m, size_t len, int flag)
static off_t ms_seek(FILE *f, off_t off, int whence)
static size_t ms_write(FILE *f, const unsigned char *buf, size_t len)
int msync(void *start, size_t len, int flags)
void mtx_destroy(mtx_t *mtx)
int mtx_init(mtx_t *m, int type)
int mtx_lock(mtx_t *m)
int mtx_timedlock(mtx_t *restrict m, const struct timespec *restrict ts)
int mtx_trylock(mtx_t *m)
int mtx_unlock(mtx_t *mtx)
int munlock(const void *addr, size_t len)
int __munmap(void *start, size_t len)
static size_t mwrite(FILE *f, const unsigned char *buf, size_t len)
static int name_from_dns(struct address buf[static MAXADDRS], char canon[static 256], const char *name, int family, const struct resolvconf *conf)
int name_to_handle_at(int dirfd, const char *pathname,
float nanf(const char *s)
long double nanl(const char *s)
double nan(const char *s)
int nanosleep(const struct timespec *req, struct timespec *rem)
static int __netlink_enumerate(int fd, unsigned int seq, int type, int af,
static int netlink_msg_to_ifaddr(void *pctx, struct nlmsghdr *h)
static int netlink_msg_to_nameindex(void *pctx, struct nlmsghdr *h)
locale_t __newlocale(int mask, const char *name, locale_t loc)
float nextafterf(float x, float y)
long double nextafterl(long double x, long double y) nextafterl 9 math/nextafterl.c long double nextafterl(long double x, long double y) nextafterl 45 math/nextafterl.c long double nextafterl(long double x, long double y)
double nextafter(double x, double y)
float nexttowardf(float x, long double y)
double nexttoward(double x, long double y) nexttoward 9 math/nexttoward.c double nexttoward(double x, long double y)
int nftw(const char *path, int (*fn)(const char *, const struct stat *, int, struct FTW *), int fd_limit, int flags)
char *ngettext(const char *msgid1, const char *msgid2, unsigned long int n)
char *__nl_langinfo_l(nl_item item, locale_t loc)
char *__nl_langinfo(nl_item item)
static void nodtor(void *dummy)
static struct num normalize(double x)
long nrand48(unsigned short s[3])
FILE *__nscd_query(int32_t req, const char *key, int32_t *buf, size_t len, int *swap)
unsigned ns_get16(const unsigned char *cp)
unsigned long ns_get32(const unsigned char *cp)
int ns_initparse(const unsigned char *msg, int msglen, ns_msg *handle)
int ns_name_uncompress(const unsigned char *msg, const unsigned char *eom,
int ns_parserr(ns_msg *handle, ns_sect section, int rrnum, ns_rr *rr)
void ns_put16(unsigned s, unsigned char *cp)
void ns_put32(unsigned long l, unsigned char *cp)
int ns_skiprr(const unsigned char *ptr, const unsigned char *eom, ns_sect section, int count)
FILE *__ofl_add(FILE *f)
FILE **__ofl_lock()
void __ofl_unlock()
int openat(int fd, const char *filename, int flags, ...)
int open_by_handle_at(int mount_fd, struct file_handle *handle, int flags)
DIR *opendir(const char *name)
static void __openlog()
void openlog(const char *ident, int opt, int facility)
int open(const char *filename, int flags, ...)
FILE *open_memstream(char **bufp, size_t *sizep)
int openpty(int *pm, int *ps, char *name, const struct termios *tio, const struct winsize *ws)
FILE *open_wmemstream(wchar_t **bufp, size_t *sizep)
int __overflow(FILE *f, int _c)
long double __p1evll(long double x, const long double *P, int n)
static void pad(struct md5 *s) pad 86 crypt/crypt_sha256.c static void pad(struct sha256 *s) pad 103 crypt/crypt_sha512.c static void pad(struct sha512 *s) pad 138 stdio/vfprintf.c static void pad(FILE *f, char c, int w, int l, int fl)
static reg_errcode_t parse_atom(tre_parse_ctx_t *ctx, const char *s)
int __parsespent(char *s, struct spwd *sp)
long pathconf(const char *path, int name)
static int pat_next(const char *pat, size_t m, size_t *step, int flags)
int pclose(FILE *f)
void perror(const char *msg)
int pipe2(int fd[2], int flag)
int pipe(int fd[2])
int pivot_root(const char *new, const char *old)
unsigned long __pleval(const char *s, unsigned long n)
long double __polevll(long double x, const long double *P, int n)
static const struct policy *policyof(const struct in6_addr *a)
int poll(struct pollfd *fds, nfds_t n, int timeout)

static void pop_arg(union arg *arg, int type, va_list *ap) pop_arg 100 stdio/vfwprintf.c static void pop_arg(union arg *arg, int type, va_list *ap)
FILE *popen(const char *cmd, const char *mode)
int posix_close(int fd, int flags)
int posix_madvise(void *addr, size_t len, int advice)
int posix_memalign(void **res, size_t align, size_t len)
int posix_openpt(int flags)
int posix_spawnattr_destroy(posix_spawnattr_t *attr)
int posix_spawnattr_getflags(const posix_spawnattr_t *restrict attr, short *restrict flags)
int posix_spawnattr_getpgroup(const posix_spawnattr_t *restrict attr, pid_t *restrict pgrp)
int posix_spawnattr_getschedparam(const posix_spawnattr_t *restrict attr,
int posix_spawnattr_getschedpolicy(const posix_spawnattr_t *restrict attr, int *restrict policy)
int posix_spawnattr_getsigdefault(const posix_spawnattr_t *restrict attr, sigset_t *restrict def)
int posix_spawnattr_getsigmask(const posix_spawnattr_t *restrict attr, sigset_t *restrict mask)
int posix_spawnattr_init(posix_spawnattr_t *attr)
int posix_spawnattr_setflags(posix_spawnattr_t *attr, short flags)
int posix_spawnattr_setpgroup(posix_spawnattr_t *attr, pid_t pgrp)
int posix_spawnattr_setschedparam(posix_spawnattr_t *restrict attr,
int posix_spawnattr_setschedpolicy(posix_spawnattr_t *attr, int policy)
int posix_spawnattr_setsigdefault(posix_spawnattr_t *restrict attr, const sigset_t *restrict def)
int posix_spawnattr_setsigmask(posix_spawnattr_t *restrict attr, const sigset_t *restrict mask)
int posix_spawn_file_actions_addclose(posix_spawn_file_actions_t *fa, int fd)
int posix_spawn_file_actions_adddup2(posix_spawn_file_actions_t *fa, int srcfd, int fd)
int posix_spawn_file_actions_addopen(posix_spawn_file_actions_t *restrict fa, int fd, const char *restrict path, int flags, mode_t mode)
int posix_spawn_file_actions_destroy(posix_spawn_file_actions_t *fa)
int posix_spawn_file_actions_init(posix_spawn_file_actions_t *fa)
int posix_spawn(pid_t *restrict res, const char *restrict path,
int posix_spawnp(pid_t *restrict res, const char *restrict file,
float powf(float x, float y)
long double powl(long double x, long double y) powl 194 math/powl.c long double powl(long double x, long double y) powl 518 math/powl.c long double powl(long double x, long double y)
double pow(double x, double y)
int ppoll(struct pollfd *fds, nfds_t n, const struct timespec *to, const sigset_t *mask)
int prctl(int op, ...)
ssize_t pread(int fd, void *buf, size_t size, off_t ofs)
ssize_t preadv(int fd, const struct iovec *iov, int count, off_t ofs)
static int printf_core(FILE *f, const char *fmt, va_list *ap, union arg *nl_arg, int *nl_type)
int printf(const char *restrict fmt, ...)
int __private_cond_signal(pthread_cond_t *c, int n)
int prlimit(pid_t pid, int resource, const struct rlimit *new_limit, struct rlimit *old_limit)


static void processblock(struct md5 *s, const uint8_t *buf) processblock 43 crypt/crypt_sha256.c static void processblock(struct sha256 *s, const uint8_t *buf) processblock 56 crypt/crypt_sha512.c static void processblock(struct sha512 *s, const uint8_t *buf)
ssize_t process_vm_readv(pid_t pid, const struct iovec *lvec, unsigned long liovcnt, const struct iovec *rvec, unsigned long riovcnt, unsigned long flags)
ssize_t process_vm_writev(pid_t pid, const struct iovec *lvec, unsigned long liovcnt, const struct iovec *rvec, unsigned long riovcnt, unsigned long flags)
void __procfdname(char *buf, unsigned fd)
int pselect(int n, fd_set *restrict rfds, fd_set *restrict wfds, fd_set *restrict efds, const struct timespec *restrict ts, const sigset_t *restrict mask)
void psiginfo(const siginfo_t *si, const char *msg)
void psignal(int sig, const char *msg)
int pthread_atfork(void (*prepare)(void), void (*parent)(void), void (*child)(void))
int pthread_attr_destroy(pthread_attr_t *a)
int pthread_attr_getdetachstate(const pthread_attr_t *a, int *state)
int pthread_attr_getguardsize(const pthread_attr_t *restrict a, size_t *restrict size)
int pthread_attr_getinheritsched(const pthread_attr_t *restrict a, int *restrict inherit)
int pthread_attr_getschedparam(const pthread_attr_t *restrict a, struct sched_param *restrict param)
int pthread_attr_getschedpolicy(const pthread_attr_t *restrict a, int *restrict policy)
int pthread_attr_getscope(const pthread_attr_t *restrict a, int *restrict scope)
int pthread_attr_getstack(const pthread_attr_t *restrict a, void **restrict addr, size_t *restrict size)
int pthread_attr_getstacksize(const pthread_attr_t *restrict a, size_t *restrict size)
int pthread_attr_init(pthread_attr_t *a)
int pthread_attr_setdetachstate(pthread_attr_t *a, int state)
int pthread_attr_setguardsize(pthread_attr_t *a, size_t size)
int pthread_attr_setinheritsched(pthread_attr_t *a, int inherit)
int pthread_attr_setschedparam(pthread_attr_t *restrict a, const struct sched_param *restrict param)
int pthread_attr_setschedpolicy(pthread_attr_t *a, int policy)
int pthread_attr_setscope(pthread_attr_t *a, int scope)
int pthread_attr_setstack(pthread_attr_t *a, void *addr, size_t size)
int pthread_attr_setstacksize(pthread_attr_t *a, size_t size)
int pthread_barrierattr_destroy(pthread_barrierattr_t *a)
int pthread_barrierattr_getpshared(const pthread_barrierattr_t *restrict a, int *restrict pshared)
int pthread_barrierattr_init(pthread_barrierattr_t *a)
int pthread_barrierattr_setpshared(pthread_barrierattr_t *a, int pshared)
int pthread_barrier_destroy(pthread_barrier_t *b)
int pthread_barrier_init(pthread_barrier_t *restrict b, const pthread_barrierattr_t *restrict a, unsigned count)
int pthread_barrier_wait(pthread_barrier_t *b)
int pthread_cancel(pthread_t t)
void _pthread_cleanup_pop(struct __ptcb *cb, int run)
void _pthread_cleanup_push(struct __ptcb *cb, void (*f)(void *), void *x)
int pthread_condattr_destroy(pthread_condattr_t *a)
int pthread_condattr_getclock(const pthread_condattr_t *restrict a, clockid_t *restrict clk)
int pthread_condattr_getpshared(const pthread_condattr_t *restrict a, int *restrict pshared)
int pthread_condattr_init(pthread_condattr_t *a)
int pthread_condattr_setclock(pthread_condattr_t *a, clockid_t clk)
int pthread_condattr_setpshared(pthread_condattr_t *a, int pshared)
int pthread_cond_broadcast(pthread_cond_t *c)
int pthread_cond_destroy(pthread_cond_t *c)
int pthread_cond_init(pthread_cond_t *restrict c, const pthread_condattr_t *restrict a)
int pthread_cond_signal(pthread_cond_t *c)
int __pthread_cond_timedwait(pthread_cond_t *restrict c, pthread_mutex_t *restrict m, const struct timespec *restrict ts)
int pthread_cond_wait(pthread_cond_t *restrict c, pthread_mutex_t *restrict m)
int __pthread_create(pthread_t *restrict res, const pthread_attr_t *restrict attrp, void *(*entry)(void *), void *restrict arg)
static int __pthread_detach(pthread_t t)
static int __pthread_equal(pthread_t a, pthread_t b)
_Noreturn void __pthread_exit(void *result)
int pthread_getaffinity_np(pthread_t td, size_t size, cpu_set_t *set)
int pthread_getattr_default_np(pthread_attr_t *attrp)
int pthread_getattr_np(pthread_t t, pthread_attr_t *a)
int pthread_getcpuclockid(pthread_t t, clockid_t *clockid)
int pthread_getschedparam(pthread_t t, int *restrict policy, struct sched_param *restrict param)
static void *__pthread_getspecific(pthread_key_t k)
int __pthread_join(pthread_t t, void **res)
int __pthread_key_create(pthread_key_t *k, void (*dtor)(void *))
int __pthread_key_delete(pthread_key_t k)
int pthread_kill(pthread_t t, int sig)
int pthread_mutexattr_destroy(pthread_mutexattr_t *a)
int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *restrict a, int *restrict protocol)
int pthread_mutexattr_getpshared(const pthread_mutexattr_t *restrict a, int *restrict pshared)
int pthread_mutexattr_getrobust(const pthread_mutexattr_t *restrict a, int *restrict robust)
int pthread_mutexattr_gettype(const pthread_mutexattr_t *restrict a, int *restrict type)
int pthread_mutexattr_init(pthread_mutexattr_t *a)
int pthread_mutexattr_setprotocol(pthread_mutexattr_t *a, int protocol)
int pthread_mutexattr_setpshared(pthread_mutexattr_t *a, int pshared)
int pthread_mutexattr_setrobust(pthread_mutexattr_t *a, int robust)
int pthread_mutexattr_settype(pthread_mutexattr_t *a, int type)
int pthread_mutex_consistent(pthread_mutex_t *m)
int pthread_mutex_destroy(pthread_mutex_t *mutex)
int pthread_mutex_getprioceiling(const pthread_mutex_t *restrict m, int *restrict ceiling)
int pthread_mutex_init(pthread_mutex_t *restrict m, const pthread_mutexattr_t *restrict a)
int __pthread_mutex_lock(pthread_mutex_t *m)
int pthread_mutex_setprioceiling(pthread_mutex_t *restrict m, int ceiling, int *restrict old)
int __pthread_mutex_timedlock(pthread_mutex_t *restrict m, const struct timespec *restrict at)
int __pthread_mutex_trylock(pthread_mutex_t *m)
int __pthread_mutex_trylock_owner(pthread_mutex_t *m)
int __pthread_mutex_unlock(pthread_mutex_t *m)
hidden int __pthread_once_full(pthread_once_t *control, void (*init)(void))
int __pthread_once(pthread_once_t *control, void (*init)(void))
int pthread_rwlockattr_destroy(pthread_rwlockattr_t *a)
int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *restrict a, int *restrict pshared)
int pthread_rwlockattr_init(pthread_rwlockattr_t *a)
int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *a, int pshared)
int pthread_rwlock_destroy(pthread_rwlock_t *rw)
int pthread_rwlock_init(pthread_rwlock_t *restrict rw, const pthread_rwlockattr_t *restrict a)
int __pthread_rwlock_rdlock(pthread_rwlock_t *rw)
int __pthread_rwlock_timedrdlock(pthread_rwlock_t *restrict rw, const struct timespec *restrict at)
int __pthread_rwlock_timedwrlock(pthread_rwlock_t *restrict rw, const struct timespec *restrict at)
int __pthread_rwlock_tryrdlock(pthread_rwlock_t *rw)
int __pthread_rwlock_trywrlock(pthread_rwlock_t *rw)
int __pthread_rwlock_unlock(pthread_rwlock_t *rw)
int __pthread_rwlock_wrlock(pthread_rwlock_t *rw)
static pthread_t __pthread_self_internal()
int pthread_setaffinity_np(pthread_t td, size_t size, const cpu_set_t *set)
int pthread_setattr_default_np(const pthread_attr_t *attrp)
int __pthread_setcancelstate(int new, int *old)
int pthread_setcanceltype(int new, int *old)
int pthread_setname_np(pthread_t thread, const char *name)
int pthread_setschedparam(pthread_t t, int policy, const struct sched_param *param)
int pthread_setschedprio(pthread_t t, int prio)
int pthread_setspecific(pthread_key_t k, const void *x)
int pthread_sigmask(int how, const sigset_t *restrict set, sigset_t *restrict old)
int pthread_spin_destroy(pthread_spinlock_t *s)
int pthread_spin_init(pthread_spinlock_t *s, int shared)
int pthread_spin_lock(pthread_spinlock_t *s)
int pthread_spin_trylock(pthread_spinlock_t *s)
int pthread_spin_unlock(pthread_spinlock_t *s)
static int __pthread_timedjoin_np(pthread_t t, void **res, const struct timespec *at)
static int __pthread_tryjoin_np(pthread_t t, void **res)
void __pthread_tsd_run_dtors()
long ptrace(int req, ...)
char *ptsname(int fd)
int __ptsname_r(int fd, char *buf, size_t len)
int putchar(int c)
int putchar_unlocked(int c)
int putc(int c, FILE *f)
#define putc_unlocked(c, f) \
int __putenv(char *s, size_t l, char *r)
int putenv(char *s)
int putgrent(const struct group *gr, FILE *f)
int putpwent(const struct passwd *pw, FILE *f)
int puts(const char *s)
int putspent(const struct spwd *sp, FILE *f)
struct utmpx *pututxline(const struct utmpx *ut)
wint_t putwchar(wchar_t c)
wint_t putwc(wchar_t c, FILE *f)
int putw(int x, FILE *f)
ssize_t pwrite(int fd, const void *buf, size_t size, off_t ofs)
ssize_t pwritev(int fd, const struct iovec *iov, int count, off_t ofs)
void qsort(void *base, size_t nel, size_t width, cmpfun cmp)
_Noreturn void quick_exit(int code)
int quotactl(int cmd, const char *special, int id, char *addr)
int raise(int sig)
uint64_t __rand48_step(unsigned short *xi, unsigned short *lc)
int rand(void)
char *__randname(char *template)
long random(void) {
int rand_r(unsigned *seed)
struct dirent *readdir(DIR *dir)
int readdir_r(DIR *restrict dir, struct dirent *restrict buf, struct dirent **restrict result)
ssize_t readlinkat(int fd, const char *restrict path, char *restrict buf, size_t bufsize)
ssize_t readlink(const char *restrict path, char *restrict buf, size_t bufsize)
ssize_t read(int fd, void *buf, size_t count)
ssize_t readv(int fd, const struct iovec *iov, int count)
void *realloc(void *p, size_t n)
char *realpath(const char *restrict filename, char *restrict resolved)
static void reap(pid_t pid)
ssize_t recvfrom(int fd, void *restrict buf, size_t len, int flags, struct sockaddr *restrict addr, socklen_t *restrict alen)
ssize_t recv(int fd, void *buf, size_t len, int flags)
int recvmmsg(int fd, struct mmsghdr *msgvec, unsigned int vlen, unsigned int flags, struct timespec *timeout)
ssize_t recvmsg(int fd, struct msghdr *msg, int flags)
regcomp(regex_t *restrict preg, const char *restrict regex, int cflags)
size_t regerror(int e, const regex_t *restrict preg, char *restrict buf, size_t size)
regexec(const regex_t *restrict preg, const char *restrict string,
regfree(regex_t *preg)
void __register_locked_file(FILE *f, pthread_t self)
float remainderf(float x, float y)
long double remainderl(long double x, long double y) remainderl 10 math/remainderl.c long double remainderl(long double x, long double y)
double remainder(double x, double y)
int remap_file_pages(void *addr, size_t size, int prot, size_t pgoff, int flags)
int remove(const char *path)
int removexattr(const char *path, const char *name)
int __rem_pio2f(float x, double *y)
int __rem_pio2_large(double *x, double *y, int e0, int nx, int prec)
int __rem_pio2l(long double x, long double *y)
int __rem_pio2(double x, double *y)
void remque(void *element)
float remquof(float x, float y, int *quo)
long double remquol(long double x, long double y, int *quo) remquol 9 math/remquol.c long double remquol(long double x, long double y, int *quo)
double remquo(double x, double y, int *quo)
int renameat(int oldfd, const char *old, int newfd, const char *new)
int rename(const char *old, const char *new)
void __reset_tls()
static int resize(size_t nel, struct hsearch_data *htab)
int __res_mkquery(int op, const char *dname, int class, int type,
int __res_msend(int nqueries, const unsigned char *const *queries,
int __res_msend_rc(int nqueries, const unsigned char *const *queries,
int res_querydomain(const char *name, const char *domain, int class, int type, unsigned char *dest, int len)
int res_query(const char *name, int class, int type, unsigned char *dest, int len)
int __res_send(const unsigned char *msg, int msglen, unsigned char *answer, int anslen)
struct __res_state *__res_state()
void __restore_sigs(void *set)
void rewinddir(DIR *dir)
void rewind(FILE *f)
char *rindex(const char *s, int c)
int rmdir(const char *path)
float roundf(float x) roundf 5 math/powerpc64/roundf.c float roundf(float x) roundf 12 math/roundf.c float roundf(float x) roundf 5 math/s390x/roundf.c float roundf(float x)
long double roundl(long double x) roundl 12 math/roundl.c long double roundl(long double x) roundl 5 math/s390x/roundl.c long double roundl(long double x)
double round(double x) round 5 math/powerpc64/round.c double round(double x) round 10 math/round.c double round(double x) round 5 math/s390x/round.c double round(double x)
int __rtnetlink_enumerate(int link_af, int addr_af, int (*cb)(void *ctx, struct nlmsghdr *h), void *ctx)
static long long rule_to_secs(const int *rule, int year)
void *sbrk(intptr_t inc)
int scandir(const char *path, struct dirent ***res,
static long long scanexp(FILE *f, int pok)
int scanf(const char *restrict fmt, ...)
int __sched_cpucount(size_t size, const cpu_set_t *set)
int sched_getaffinity(pid_t tid, size_t size, cpu_set_t *set)
int sched_getcpu(void)
int sched_getparam(pid_t pid, struct sched_param *param)
int sched_rr_get_interval(pid_t pid, struct timespec *ts)
int sched_setaffinity(pid_t tid, size_t size, const cpu_set_t *set)
int sched_setparam(pid_t pid, const struct sched_param *param)
int sched_setscheduler(pid_t pid, int sched, const struct sched_param *param)
static int scopeof(const struct in6_addr *a)
int __secs_to_tm(long long t, struct tm *tm)
void __secs_to_zone(long long t, int local, int *isdst, long *offset, long *oppoff, const char **zonename)
unsigned short *seed48(unsigned short *s)
void seekdir(DIR *dir, long off)
int select(int n, fd_set *restrict rfds, fd_set *restrict wfds, fd_set *restrict efds, struct timeval *restrict tv)
int sem_close(sem_t *sem)
int semctl(int id, int num, int cmd, ...)
int sem_destroy(sem_t *sem)
int sem_getvalue(sem_t *restrict sem, int *restrict valp)
int sem_init(sem_t *sem, int pshared, unsigned value)
sem_t *sem_open(const char *name, int flags, ...)
int semop(int id, struct sembuf *buf, size_t n)
int sem_post(sem_t *sem)
int semtimedop(int id, struct sembuf *buf, size_t n, const struct timespec *ts)
int sem_timedwait(sem_t *restrict sem, const struct timespec *restrict at)
int sem_trywait(sem_t *sem)
int sem_unlink(const char *name)
int sem_wait(sem_t *sem)
ssize_t sendfile(int out_fd, int in_fd, off_t *ofs, size_t count)
ssize_t send(int fd, const void *buf, size_t len, int flags)
int sendmmsg(int fd, struct mmsghdr *msgvec, unsigned int vlen, unsigned int flags)
ssize_t sendmsg(int fd, const struct msghdr *msg, int flags)
ssize_t sendto(int fd, const void *buf, size_t len, int flags, const struct sockaddr *addr, socklen_t alen)
void setbuffer(FILE *f, char *buf, size_t size)
void setbuf(FILE *restrict f, char *restrict buf)
int setdomainname(const char *name, size_t len)
int setegid(gid_t egid)
int setenv(const char *var, const char *value, int overwrite)
int seteuid(uid_t euid)
int setgid(gid_t gid)
void setgrent()
int setgroups(size_t count, const gid_t list[])
int sethostname(const char *name, size_t len)
int setitimer(int which, const struct itimerval *restrict new, struct itimerval *restrict old)
void setkey(const char *key)
void setlinebuf(FILE *f)
char *setlocale(int cat, const char *name)
int setlogmask(int maskpri)
FILE *setmntent(const char *name, const char *mode)
void setprotoent(int stayopen)
void setpwent()
int setregid(gid_t rgid, gid_t egid)
int setresgid(gid_t rgid, gid_t egid, gid_t sgid)
int setresuid(uid_t ruid, uid_t euid, uid_t suid)
int setreuid(uid_t ruid, uid_t euid)
int setrlimit(int resource, const struct rlimit *rlim)
int setsockopt(int fd, int level, int optname, const void *optval, socklen_t optlen)
char *setstate(char *state) {
int settimeofday(const struct timeval *tv, const struct timezone *tz)
int setuid(uid_t uid)
void setusershell(void)
int setvbuf(FILE *restrict f, char *restrict buf, int type, size_t size)
int setxattr(const char *path, const char *name, const void *value, size_t size, int flags)
int __setxid(int nr, int id, int eid, int sid)
static char *sha256crypt(const char *key, const char *setting, char *output)
static void sha256_sum(struct sha256 *s, uint8_t *md)
static void sha256_update(struct sha256 *s, const void *m, unsigned long len)
static char *sha512crypt(const char *key, const char *setting, char *output)
static void sha512_sum(struct sha512 *s, uint8_t *md)
static void sha512_update(struct sha512 *s, const void *m, unsigned long len)
int __shgetc(FILE *f)
void __shlim(FILE *f, off_t lim)
void *shmat(int id, const void *addr, int flag) shmat 11 ipc/shmat.c void *shmat(int id, const void *addr, int flag)
int shmctl(int id, int cmd, struct shmid_ds *buf)
int shmdt(const void *addr)
char *__shm_mapname(const char *name, char *buf)
int shm_open(const char *name, int flag, mode_t mode)
int shm_unlink(const char *name)
static void sift(unsigned char *head, size_t width, cmpfun cmp, int pshift, size_t lp[])
int __sigaction(int sig, const struct sigaction *restrict sa, struct sigaction *restrict old)
int sigaddset(sigset_t *set, int sig)
int sigaltstack(const stack_t *restrict ss, stack_t *restrict old)
int sigandset(sigset_t *dest, const sigset_t *left, const sigset_t *right)
int sigdelset(sigset_t *set, int sig)
int sigemptyset(sigset_t *set)
int sigfillset(sigset_t *set)
int sighold(int sig)
int sigignore(int sig)
int siginterrupt(int sig, int flag)
int sigisemptyset(const sigset_t *set)
int sigismember(const sigset_t *set, int sig)
_Noreturn void siglongjmp(sigjmp_buf buf, int ret)
int signalfd(int fd, const sigset_t *sigs, int flags)
void (*signal(int sig, void (*func)(int)))(int)
int sigorset(sigset_t *dest, const sigset_t *left, const sigset_t *right)
int sigpause(int sig)
int sigpending(sigset_t *set)
int sigprocmask(int how, const sigset_t *restrict set, sigset_t *restrict old)
int sigqueue(pid_t pid, int sig, const union sigval value)
int sigrelse(int sig)
hidden int __sigsetjmp_tail(sigjmp_buf jb, int ret)
void (*sigset(int sig, void (*handler)(int)))(int)
int sigsuspend(const sigset_t *mask)
int sigtimedwait(const sigset_t *restrict mask, siginfo_t *restrict si, const struct timespec *restrict timeout)
int sigwaitinfo(const sigset_t *restrict mask, siginfo_t *restrict si)
int sigwait(const sigset_t *restrict mask, int *restrict sig)
void sincosf(float x, float *sin, float *cos)
void sincosl(long double x, long double *sin, long double *cos) sincosl 13 math/sincosl.c void sincosl(long double x, long double *sin, long double *cos)
void sincos(double x, double *sin, double *cos)
float sinf(float x)
float sinhf(float x)
long double sinhl(long double x) sinhl 9 math/sinhl.c long double sinhl(long double x) sinhl 39 math/sinhl.c long double sinhl(long double x)
double sinh(double x)
long double sinl(long double x) sinl 9 math/sinl.c long double sinl(long double x)
double sin(double x)
unsigned sleep(unsigned seconds)
int snprintf(char *restrict s, size_t n, const char *restrict fmt, ...)
static size_t sn_write(FILE *f, const unsigned char *s, size_t l)
int sockatmark(int s)
int socket(int domain, int type, int protocol)
int socketpair(int domain, int type, int protocol, int fd[2])
static int sort(const void *a, const void *b)
ssize_t splice(int fd_in, off_t *off_in, int fd_out, off_t *off_out, size_t len, unsigned flags)
int sprintf(char *restrict s, const char *restrict fmt, ...)
void srand48(long seed)
void srand(unsigned s)
static void __srandom(unsigned seed) {
void srandom(unsigned seed) {
int sscanf(const char *restrict s, const char *restrict fmt, ...)


static int start_c11(void *p)
static void *start(void *p) start 180 thread/pthread_create.c static int start(void *p) start 47 time/timer_create.c static void *start(void *arg)
static int __statfs(const char *path, struct statfs *buf)
static int static_dl_iterate_phdr(int(*callback)(struct dl_phdr_info *info, size_t size, void *data), void *data)
static void static_init_tls(size_t *aux)
int stat(const char *restrict path, struct stat *restrict buf)
int statvfs(const char *restrict path, struct statvfs *restrict buf)
int __stdio_close(FILE *f)
void __stdio_exit(void)
size_t __stdio_read(FILE *f, unsigned char *buf, size_t len)
off_t __stdio_seek(FILE *f, off_t off, int whence)
size_t __stdio_write(FILE *f, const unsigned char *buf, size_t len)
size_t __stdout_write(FILE *f, const unsigned char *buf, size_t len)
int stime(const time_t *t)
static long double stirf(long double x)
char *__stpcpy(char *restrict d, const char *restrict s)
char *__stpncpy(char *restrict d, const char *restrict s, size_t n)
int __strcasecmp_l(const char *l, const char *r, locale_t loc)
int strcasecmp(const char *_l, const char *_r)
char *strcasestr(const char *h, const char *n)
char *strcat(char *restrict dest, const char *restrict src)
char *strchr(const char *s, int c)
char *__strchrnul(const char *s, int c)
int strcmp(const char *l, const char *r)
int __strcoll_l(const char *l, const char *r, locale_t loc)
int strcoll(const char *l, const char *r)
char *strcpy(char *restrict dest, const char *restrict src)
size_t strcspn(const char *s, const char *c)
char *strdup(const char *s)
char *__strerror_l(int e, locale_t loc)
char *strerror(int e)
int strerror_r(int err, char *buf, size_t buflen)
ssize_t strfmon_l(char *restrict s, size_t n, locale_t loc, const char *restrict fmt, ...)
ssize_t strfmon(char *restrict s, size_t n, const char *restrict fmt, ...)
const char *__strftime_fmt_1(char (*s)[100], size_t *l, int f, const struct tm *tm, locale_t loc, int pad)
size_t __strftime_l(char *restrict s, size_t n, const char *restrict f, const struct tm *restrict tm, locale_t loc)
size_t strftime(char *restrict s, size_t n, const char *restrict f, const struct tm *restrict tm)
size_t __string_read(FILE *f, unsigned char *buf, size_t len)
size_t strlcat(char *d, const char *s, size_t n)
size_t strlcpy(char *d, const char *s, size_t n)
size_t strlen(const char *s)
int __strncasecmp_l(const char *l, const char *r, size_t n, locale_t loc)
int strncasecmp(const char *_l, const char *_r, size_t n)
char *strncat(char *restrict d, const char *restrict s, size_t n)
int strncmp(const char *_l, const char *_r, size_t n)
char *strncpy(char *restrict d, const char *restrict s, size_t n)
char *strndup(const char *s, size_t n)
static int str_next(const char *str, size_t n, size_t *step)
size_t strnlen(const char *s, size_t n)
char *strpbrk(const char *s, const char *b)
char *strptime(const char *restrict s, const char *restrict f, struct tm *restrict tm)
char *strrchr(const char *s, int c)
char *strsep(char **str, const char *sep)
char *strsignal(int signum)
size_t strspn(const char *s, const char *c)
char *strstr(const char *h, const char *n)
double strtod(const char *restrict s, char **restrict p)
float strtof(const char *restrict s, char **restrict p)
intmax_t strtoimax(const char *restrict s, char **restrict p, int base)
char *strtok(char *restrict s, const char *restrict sep)
char *strtok_r(char *restrict s, const char *restrict sep, char **restrict p)
long double strtold(const char *restrict s, char **restrict p)
long long strtoll(const char *restrict s, char **restrict p, int base)
long strtol(const char *restrict s, char **restrict p, int base)
unsigned long long strtoull(const char *restrict s, char **restrict p, int base)
unsigned long strtoul(const char *restrict s, char **restrict p, int base)
uintmax_t strtoumax(const char *restrict s, char **restrict p, int base)

static long double strtox(const char *s, char **p, int prec) strtox 8 stdlib/strtol.c static unsigned long long strtox(const char *s, char **p, int base, unsigned long long lim)
int strverscmp(const char *l0, const char *r0)
size_t __strxfrm_l(char *restrict dest, const char *restrict src, size_t n, locale_t loc)
size_t strxfrm(char *restrict dest, const char *restrict src, size_t n)
static int stub_dladdr(const void *addr, Dl_info *info)
static void *stub_dlopen(const char *file, int mode)
static void *stub_dlsym(void *restrict p, const char *restrict s, void *restrict ra)
static int stub_invalid_handle(void *h)
static int submit(struct aiocb *cb, int op)
void swab(const void *restrict _src, void *restrict _dest, ssize_t n)
int swapoff(const char *path)
int swapon(const char *path, int flags)
int swprintf(wchar_t *restrict s, size_t n, const wchar_t *restrict fmt, ...)
int swscanf(const wchar_t *restrict s, const wchar_t *restrict fmt, ...)
static size_t sw_write(FILE *f, const unsigned char *s, size_t l)
int symlinkat(const char *existing, int fd, const char *new)
int symlink(const char *existing, const char *new)
void __synccall(void (*func)(void *), void *ctx)
long __syscall_cp_c(syscall_arg_t nr,
#define syscall(...) __syscall_ret(__syscall(__VA_ARGS__)) syscall 6 misc/syscall.c #undef syscall syscall 8 misc/syscall.c long syscall(long n, ...)
long __syscall_ret(unsigned long r)
long sysconf(int name)
void syslog(int priority, const char *message, ...)
int system(const char *cmd)
float tanf(float x)
float tanhf(float x)
double tanh(double x)
long double tanl(long double x) tanl 9 math/tanl.c long double tanl(long double x)
double tan(double x)
int tcgetattr(int fd, struct termios *tio)
pid_t tcgetpgrp(int fd)
pid_t tcgetsid(int fd)
int tcsetattr(int fd, int act, const struct termios *tio)
int tcsetpgrp(int fd, pid_t pgrp)
void *tdelete(const void *restrict key, void **restrict rootp,
void tdestroy(void *root, void (*freekey)(void *))
long telldir(DIR *dir)
char *tempnam(const char *dir, const char *pfx)
void __testcancel()
char *textdomain(const char *domainname)
void *tfind(const void *key, void *const *rootp,
float tgammaf(float x)
long double tgammal(long double x) tgammal 205 math/tgammal.c long double tgammal(long double x) tgammal 277 math/tgammal.c long double tgammal(long double x)
double tgamma(double x)
int thrd_create(thrd_t *thr, thrd_start_t func, void *arg)
_Noreturn void thrd_exit(int result)
int thrd_join(thrd_t t, int *res)
int thrd_sleep(const struct timespec *req, struct timespec *rem)
int __timedwait_cp(volatile int *addr, int val,
int __timedwait(volatile int *addr, int val,
time_t timegm(struct tm *tm)
time_t time(time_t *t)
int timer_create(clockid_t clk, struct sigevent *restrict evp, timer_t *restrict res)
int timer_delete(timer_t t)
int timerfd_gettime(int fd, struct itimerspec *cur)
int timerfd_settime(int fd, int flags, const struct itimerspec *new, struct itimerspec *old)
int timer_getoverrun(timer_t t)
int timer_gettime(timer_t t, struct itimerspec *val)
static void timer_handler(int sig, siginfo_t *si, void *ctx)
int timer_settime(timer_t t, int flags, const struct itimerspec *restrict val, struct itimerspec *restrict old)
clock_t times(struct tms *tms)
int timespec_get(struct timespec aio complex conf crypt ctype data_struct.txt dirent env errno exit fcntl fenv format_sigs.sh get_signatures.sh GPATH GRTAGS GTAGS include internal ipc ldso legacy linux locale malloc math misc mman mq multibyte musllvm_funcs.txt network output passwd prng process regex sched search select setjmp shit.txt signal signatures.txt stat stdio stdlib string temp termios thread time unistd ts, int base)
void __tl_lock(void)
void *__tls_get_addr(tls_mod_off_t *v)
void __tl_sync(pthread_t td)
void __tl_unlock(void)
FILE *tmpfile(void)
char *tmpnam(char *buf)
long long __tm_to_secs(const struct tm *tm)
const char *__tm_to_tzname(const struct tm *tm)
int __tolower_l(int c, locale_t l)
int __toread(FILE *f)
int __toupper_l(int c, locale_t l)
static wchar_t __towcase(wchar_t wc, int lower)
wint_t __towctrans_l(wint_t c, wctrans_t t, locale_t l)
wint_t towctrans(wint_t wc, wctrans_t trans)
wint_t __towlower_l(wint_t c, locale_t l)
wint_t towlower(wint_t wc)
int __towrite(FILE *f)
wint_t __towupper_l(wint_t c, locale_t l)
wint_t towupper(wint_t wc)
tre_add_tag_left(tre_mem_t mem, tre_ast_node_t *node, int tag_id)
tre_add_tag_right(tre_mem_t mem, tre_ast_node_t *node, int tag_id)
tre_add_tags(tre_mem_t mem, tre_stack_t *stack, tre_ast_node_t *tree,
tre_ast_new_catenation(tre_mem_t mem, tre_ast_node_t *left, tre_ast_node_t *right)
tre_ast_new_iter(tre_mem_t mem, tre_ast_node_t *arg, int min, int max, int minimal)
tre_ast_new_literal(tre_mem_t mem, int code_min, int code_max, int position)
tre_ast_new_node(tre_mem_t mem, int type, void *obj)
tre_ast_new_union(tre_mem_t mem, tre_ast_node_t *left, tre_ast_node_t *right)
tre_ast_to_tnfa(tre_ast_node_t *node, tre_tnfa_transition_t *transitions,
tre_compare_lit(const void *a, const void *b)
tre_copy_ast(tre_mem_t mem, tre_stack_t *stack, tre_ast_node_t *ast,
tre_fill_pmatch(size_t nmatch, regmatch_t pmatch[], int cflags,
tre_make_trans(tre_pos_and_tags_t *p1, tre_pos_and_tags_t *p2,
tre_match_empty(tre_stack_t *stack, tre_ast_node_t *node, int *tags,



tre_neg_char_classes_match(tre_ctype_t *classes, tre_cint_t wc, int icase)
static tre_literal_t *tre_new_lit(struct literals *p)
tre_set_union(tre_mem_t mem, tre_pos_and_tags_t *set1, tre_pos_and_tags_t *set2,
tre_stack_push(tre_stack_t *s, union tre_stack_item value)
static void trinkle(unsigned char *head, size_t width, cmpfun cmp, size_t pp[2], int pshift, int trusty, size_t lp[])
int truncate(const char *path, off_t length)
float truncf(float x) truncf 5 math/powerpc64/truncf.c float truncf(float x) truncf 5 math/s390x/truncf.c float truncf(float x) truncf 3 math/truncf.c float truncf(float x)
long double truncl(long double x) truncl 4 math/truncl.c long double truncl(long double x) truncl 12 math/truncl.c long double truncl(long double x)
double trunc(double x) trunc 5 math/powerpc64/trunc.c double trunc(double x) trunc 5 math/s390x/trunc.c double trunc(double x) trunc 3 math/trunc.c double trunc(double x)
int __tsearch_balance(void **p)
void *tsearch(const void *key, void **rootp,
int tss_create(tss_t *tss, tss_dtor_t dtor)
void tss_delete(tss_t key)
int tss_set(tss_t k, void *x)
char *ttyname(int fd)
int ttyname_r(int fd, char *name, size_t size)
void twalk(const void *root, void (*action)(const void *, VISIT, int))
static void __tzset()
unsigned ualarm(unsigned value, unsigned interval)
int __uflow(FILE *f)
long ulimit(int cmd, ...)
int umount2(const char *special, int flags)
int umount(const char *special)
int uname(struct utsname *uts)
static void unbin(struct chunk *c, int i)
static void undo(void *control)
int ungetc(int c, FILE *f)
wint_t ungetwc(wint_t c, FILE *f) ungetwc 81 stdio/vfwscanf.c #undef ungetwc ungetwc 82 stdio/vfwscanf.c #define ungetwc(c,f) \
static unsigned uni_to_jis(unsigned c)
int unlinkat(int fd, const char *path, int flag)
int unlink(const char *path)
void __unlist_locked_file(FILE *f)
static inline void unlock_bin(int i)
void __unlockfile(FILE *f)
void __unlock(volatile int *l)
int unlockpt(int fd)
int unsetenv(const char *name)
void updwtmpx(const char *f, const struct utmpx *u)
locale_t __uselocale(locale_t new)
int usleep(unsigned useconds)
int utime(const char *path, const struct utimbuf *times)
int utimensat(int fd, const char *path, const struct timespec times[2], int flags)
int utimes(const char *path, const struct timeval times[2])
static int __utmpxname(const char *f)
void *valloc(size_t size)
int vasprintf(char **s, const char *fmt, va_list ap)
int vdprintf(int fd, const char *restrict fmt, va_list ap)
void *__vdsosym(const char *vername, const char *name)
_Noreturn void verr(int status, const char *fmt, va_list ap)
_Noreturn void verrx(int status, const char *fmt, va_list ap)
int versionsort(const struct dirent **a, const struct dirent **b)
int vfprintf(FILE *restrict f, const char *restrict fmt, va_list ap)
int vfscanf(FILE *restrict f, const char *restrict fmt, va_list ap)
int vfwprintf(FILE *restrict f, const wchar_t *restrict fmt, va_list ap)
int vfwscanf(FILE *restrict f, const wchar_t *restrict fmt, va_list ap)
ssize_t vmsplice(int fd, const struct iovec *iov, size_t cnt, unsigned flags)
void __vm_unlock()
void __vm_wait()
int vprintf(const char *restrict fmt, va_list ap)
int vscanf(const char *restrict fmt, va_list ap)
int vsnprintf(char *restrict s, size_t n, const char *restrict fmt, va_list ap)
int vsprintf(char *restrict s, const char *restrict fmt, va_list ap)
int vsscanf(const char *restrict s, const char *restrict fmt, va_list ap)
static ssize_t vstrfmon_l(char *s, size_t n, locale_t loc, const char *fmt, va_list ap)
int vswprintf(wchar_t *restrict s, size_t n, const wchar_t *restrict fmt, va_list ap)
int vswscanf(const wchar_t *restrict s, const wchar_t *restrict fmt, va_list ap)
static void __vsyslog(int priority, const char *message, va_list ap)
void vwarn(const char *fmt, va_list ap)
void vwarnx(const char *fmt, va_list ap)
int vwprintf(const wchar_t *restrict fmt, va_list ap)
int vwscanf(const wchar_t *restrict fmt, va_list ap)
pid_t wait3(int *status, int options, struct rusage *usage)
pid_t wait4(pid_t pid, int *status, int options, struct rusage *usage)
int waitid(idtype_t type, id_t id, siginfo_t *info, int options)
void __wait(volatile int *addr, volatile int *waiters, int val, int priv)
pid_t wait(int *status)
pid_t waitpid(pid_t pid, int *status, int options)
static void *wait_thread(void *p)
static void walk(const struct node *r, void (*action)(const void *, VISIT, int), int d)
void warn(const char *fmt, ...)
void warnx(const char *fmt, ...)
wchar_t *wcpcpy(wchar_t *restrict d, const wchar_t *restrict s)
wchar_t *wcpncpy(wchar_t *restrict d, const wchar_t *restrict s, size_t n)
size_t wcrtomb(char *restrict s, wchar_t wc, mbstate_t *restrict st)
int wcscasecmp_l(const wchar_t *l, const wchar_t *r, locale_t locale)
int wcscasecmp(const wchar_t *l, const wchar_t *r)
wchar_t *wcscat(wchar_t *restrict dest, const wchar_t *restrict src)
wchar_t *wcschr(const wchar_t *s, wchar_t c)
int wcscmp(const wchar_t *l, const wchar_t *r)
int __wcscoll_l(const wchar_t *l, const wchar_t *r, locale_t locale)
int wcscoll(const wchar_t *l, const wchar_t *r)
wchar_t *wcscpy(wchar_t *restrict d, const wchar_t *restrict s)
size_t wcscspn(const wchar_t *s, const wchar_t *c)
wchar_t *wcsdup(const wchar_t *s)
size_t __wcsftime_l(wchar_t *restrict s, size_t n, const wchar_t *restrict f, const struct tm *restrict tm, locale_t loc)
size_t wcsftime(wchar_t *restrict wcs, size_t n, const wchar_t *restrict f, const struct tm *restrict tm)
size_t wcslen(const wchar_t *s)
int wcsncasecmp_l(const wchar_t *l, const wchar_t *r, size_t n, locale_t locale)
int wcsncasecmp(const wchar_t *l, const wchar_t *r, size_t n)
wchar_t *wcsncat(wchar_t *restrict d, const wchar_t *restrict s, size_t n)
int wcsncmp(const wchar_t *l, const wchar_t *r, size_t n)
wchar_t *wcsncpy(wchar_t *restrict d, const wchar_t *restrict s, size_t n)
size_t wcsnlen(const wchar_t *s, size_t n)
size_t wcsnrtombs(char *restrict dst, const wchar_t **restrict wcs, size_t wn, size_t n, mbstate_t *restrict st)
wchar_t *wcspbrk(const wchar_t *s, const wchar_t *b)
wchar_t *wcsrchr(const wchar_t *s, wchar_t c)
size_t wcsrtombs(char *restrict s, const wchar_t **restrict ws, size_t n, mbstate_t *restrict st)
size_t wcsspn(const wchar_t *s, const wchar_t *c)
wchar_t *wcsstr(const wchar_t *restrict h, const wchar_t *restrict n)
double wcstod(const wchar_t *restrict s, wchar_t **restrict p)
float wcstof(const wchar_t *restrict s, wchar_t **restrict p)
intmax_t wcstoimax(const wchar_t *restrict s, wchar_t **restrict p, int base)
wchar_t *wcstok(wchar_t *restrict s, const wchar_t *restrict sep, wchar_t **restrict p)
long double wcstold(const wchar_t *restrict s, wchar_t **restrict p)
long long wcstoll(const wchar_t *restrict s, wchar_t **restrict p, int base)
long wcstol(const wchar_t *restrict s, wchar_t **restrict p, int base)
size_t wcstombs(char *restrict s, const wchar_t *restrict ws, size_t n)
unsigned long long wcstoull(const wchar_t *restrict s, wchar_t **restrict p, int base)
unsigned long wcstoul(const wchar_t *restrict s, wchar_t **restrict p, int base)
uintmax_t wcstoumax(const wchar_t *restrict s, wchar_t **restrict p, int base)

static long double wcstox(const wchar_t *s, wchar_t **p, int prec) wcstox 32 stdlib/wcstol.c static unsigned long long wcstox(const wchar_t *s, wchar_t **p, int base, unsigned long long lim)
wchar_t *wcswcs(const wchar_t *haystack, const wchar_t *needle)
int wcswidth(const wchar_t *wcs, size_t n)
size_t __wcsxfrm_l(wchar_t *restrict dest, const wchar_t *restrict src, size_t n, locale_t loc)
size_t wcsxfrm(wchar_t *restrict dest, const wchar_t *restrict src, size_t n)
int wctob(wint_t c)
int wctomb(char *s, wchar_t wc)
wctrans_t __wctrans_l(const char *s, locale_t l)
wctrans_t wctrans(const char *class)
wctype_t __wctype_l(const char *s, locale_t l)
wctype_t wctype(const char *s)
int wcwidth(wchar_t wc)
static int week_num(const struct tm *tm)
wchar_t *wmemchr(const wchar_t *s, wchar_t c, size_t n)
int wmemcmp(const wchar_t *l, const wchar_t *r, size_t n)
wchar_t *wmemcpy(wchar_t *restrict d, const wchar_t *restrict s, size_t n)
wchar_t *wmemmove(wchar_t *d, const wchar_t *s, size_t n)
wchar_t *wmemset(wchar_t *d, wchar_t c, size_t n)
static int wms_close(FILE *f)
static off_t wms_seek(FILE *f, off_t off, int whence)
static size_t wms_write(FILE *f, const unsigned char *buf, size_t len)
int wordexp(const char *restrict s, wordexp_t *restrict we, int flags)
void wordfree(wordexp_t *we)
static int wprintf_core(FILE *f, const wchar_t *fmt, va_list *ap, union arg *nl_arg, int *nl_type)
int wprintf(const wchar_t *restrict fmt, ...)
static size_t wrap_write(FILE *f, const unsigned char *buf, size_t len)
ssize_t write(int fd, const void *buf, size_t count)
ssize_t writev(int fd, const struct iovec *iov, int count)
int wscanf(const wchar_t *restrict fmt, ...)
static size_t wstring_read(FILE *f, unsigned char *buf, size_t len)
int __xmknodat(int ver, int fd, const char *path, mode_t mode, dev_t *dev)
int __xmknod(int ver, const char *path, mode_t mode, dev_t *dev)
int __xstat(int ver, const char *path, struct stat *buf)
float y0f(float x)
double y0(double x)
float y1f(float x)
double y1(double x)
long long __year_to_secs(long long year, int *is_leap)
float ynf(int n, float x)
double yn(int n, double x)
